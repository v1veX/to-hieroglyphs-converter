/**
Нормализация блочной модели
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
*/
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
*/
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
*/
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
*/
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
*/
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
*/
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
  Наследуем свойства шрифт для полей ввода
*/
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  height: 100%;
  /**
    Плавный скролл
  */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
  */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
  */
  line-height: 1.5;
}

/**
Приводим к единому цвету svg-элементы
*/
svg *[fill] { fill: currentColor }
svg *[stroke] { stroke: currentColor }

/**
Чиним баг задержки смены цвета при взаимодействии с svg-элементами
*/
svg * {
  transition-property: fill, stroke;
}

 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
   * {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
}

:root {
  --color-background: #FFFFFF;
  --color-background-accent: #343434;
  --color-main: #4294FF;
  --color-main-hover: #2277e5;
  --color-accent: #F1F1F1;
  --color-accent-hover: #c2c2c2;
  --color-text-main: #000000;
  --color-text-accent: #727272;
  --color-text-light: #FFFFFF;

  --textarea-height: 150px;
  --history-panel-width: 350px;

  --margin: 25px;

  --border-radius: 15px;
  --border-radius-small: 10px;

  --font-size: 18px;
  --font-size-headline: 32px;

  --transition-duration: 0.3s;
}

:root.dark {
  --color-background: #001219;
  --color-main-hover: transparent;
  --color-accent: #1F3138;
  --color-accent-hover: #47616C;
  --color-text-main: #FFFFFF;
}

:root.no-transition {
  --transition-duration: 0s;
}

button {
  -webkit-tap-highlight-color: transparent;
}

body {
  background-color: var(--color-background);
  font-family: Arial, sans-serif;
  color: var(--color-text-main);
  transition: all var(--transition-duration);
}

.main {
  position: relative;
  width: 100%;
  padding-top: 65px;
  padding-bottom: 40px;
  transition: width var(--transition-duration);
}

.main.shifted {
  width: calc(100% - var(--history-panel-width));
}

.main-inner {
  max-width: 700px;
  margin-inline: auto;
  padding-inline: 20px;
}

.headline, .description {
  margin-bottom: var(--margin);
}

.headline {
  font-size: var(--font-size-headline);
  text-align: center;
}

.description {
  color: var(--color-text-accent);  
  text-align: center;
}

.underlined {
  text-decoration: underline;
}

.converter-form {
  margin-bottom: 50px;
}

.converter-input-wrapper {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid var(--color-main);
  border-radius: var(--border-radius);
}

.converter-input {
  height: var(--textarea-height);
  width: 100%;
  background-color: transparent;
  border: none;
  font-size: var(--font-size);
  color: var(--color-text-main);
  resize: none;
  overscroll-behavior: none;
}

.converter-input:focus-visible {
  outline: 0;
}

.symbols-amount {
  color: var(--color-text-accent);
  text-align: right;
  font-size: 13px;
}

.buttons-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr) 50px;
  column-gap: 15px;
}

.button {
  display: block;
  padding-block: 12px;
  border: 1px solid var(--color-main);
  border-radius: var(--border-radius-small);
  background-color: var(--color-main);
  color: var(--color-text-light);
  text-align: center;
  cursor: pointer;
  transition: all var(--transition-duration);
}

.button.gray {
  background-color: var(--color-accent);
  border: none;
  color: var(--color-text-main);
}

.history-button {
  display: flex;
  align-items: center;
  justify-content: center;
}

.result-field {
  margin-bottom: 50px;
  text-align: center;
  font-size: var(--font-size);
}

.copy-button {
  display: none;
  position: sticky;
  bottom: 20px;
  width: 250px;
  margin-inline: auto;
  padding-inline: 75px;
}

.copy-button.shown {
  display: block;
}

.notification {
  position: fixed;
  top: -70px;
  display: flex;
  justify-content: center;
  width: 100%;
  transition: top var(--transition-duration);
}

.notification.shown {
  top: 13px;
}

.notification-text {
  padding: 10px 15px;
  background-color: var(--color-background-accent);
  border-radius: var(--border-radius-small);
  color: var(--color-background);
}

.theme-button {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 76px;
  height: 40px;
  padding: 0;
  background-color: transparent;
  border: 1px solid var(--color-accent);
  border-radius: 30px;
  color: var(--color-text-main);
  cursor: pointer;
  transition-property: background-color, color, border-color;
  transition-duration: var(--transition-duration);
}

.theme-button-inner {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  padding: 4px 10px;
}

.theme-button-thumb {
  --thumbSize: 32px;

  position: absolute;
  left: 4px;
  width: var(--thumbSize);
  height: var(--thumbSize);
  background-color: var(--color-accent);
  border-radius: 50%;
  transition-property: left, background-color;
  transition-duration: var(--transition-duration);
}

.theme-button.dark-enabled .theme-button-thumb {
  left: calc(100% - 4px - var(--thumbSize));
}

.history {
  position: fixed;
  top: 0;
  left: 100%;
  bottom: 0;
  display: flex;
  flex-direction: column;
  width: var(--history-panel-width);
  background-color: var(--color-background);
  border-left: 1px solid var(--color-accent);
  color: var(--color-text-main);
  transition: all var(--transition-duration);
}

.history.shown {
  left: calc(100% - var(--history-panel-width));
}

.history-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 30px;
  border-bottom: 1px solid var(--color-accent);
  transition: border-color var(--transition-duration);
}

.history-headline {
  font-size: var(--font-size-headline);
}

.close-history-button {
  display: flex;
  padding: 0;
  background-color: transparent;
  border: none;
  color: var(--color-text-main);
  cursor: pointer;
  transition: color var(--transition-duration);
}

.history-body {
  overflow-y: auto;
  overscroll-behavior: none;
}

.history-item {
  padding: 20px 30px;
  border-bottom: 1px solid var(--color-accent);
  transition-property: background-color, border-color;
  transition-duration: var(--transition-duration);
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
}

@media (max-width: 767px) {
  :root {
    --margin: 20px;

    --font-size: 16px;
    --font-size-headline: 28px;
  }
  
  .main.shifted {
    width: 100%;
  }

  .history {
    width: 100%;
    border: none;
  }
  
  .history.shown {
    left: 0;
  }
}

@media (hover: hover) {
  .button:hover {
    background-color: var(--color-main-hover);
  }

  .button.gray:hover {
    background-color: var(--color-accent-hover);
  }

  .theme-button:hover {
    background-color: var(--color-accent-hover);
  }

  .close-history-button:hover {
    color: var(--color-accent-hover);
  }

  .history-item:hover {
    background-color: var(--color-accent);
  }
}

@media (hover: none) {
  .button:active {
    background-color: var(--color-main-hover);
  }

  .button.gray:active {
    background-color: var(--color-accent-hover);
  }

  .theme-button:active {
    background-color: var(--color-accent-hover);
  }

  .close-history-button:active {
    color: var(--color-accent-hover);
  }

  .history-item:active {
    background-color: var(--color-accent);
  }
}